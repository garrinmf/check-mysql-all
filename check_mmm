#!/usr/bin/perl

################################################################################
# check_mmm - Nagios Plug-In for typical MMM checks.
#
# @author  Ryan Lowe <ryan.a.lowe@percona.com>
# @date    2009-05-01
# @license GPL v2
################################################################################

use strict;
use warnings FATAL => 'all';
use Pod::Usage;
use Getopt::Long;
use English qw(-no_match_vars);
use DBI;
use lib "/usr/local/nagios/libexec";
use lib "/usr/lib64/nagios/plugins";
use utils qw(%ERRORS);

my $VERSION = '0.0.4';
my @CHECKS = qw(mmmd_agent mmmd_angel);
my %OPTIONS;
my %ARGS;

################################################################################
# Get configuration information
################################################################################

# Parse command line opts
my $gop=new Getopt::Long::Parser;
$gop->configure('no_ignore_case','bundling');
if (!$gop->getoptions(
    'check|K=s'    => \$OPTIONS{'check'   },
    'help|h'       => \$OPTIONS{'help'    },
    'version|V'    => \$OPTIONS{'version' },

    pod2usage(2);
}

# Help if asked for or no check given
pod2usage(2) if     ($OPTIONS{'help'});
pod2usage(2) unless ($OPTIONS{'check'});

# Yay for versions
if ($OPTIONS{'version'}) {
    print "$VERSION\n";
    exit $ERRORS{'OK'};
}

# Verify valid check
unless (grep {/^$OPTIONS{'check'}$/} @CHECKS) { 
    print "UNKNOWN: Check $OPTIONS{'check'} is unrecognized\n";
    exit $ERRORS{'UNKNOWN'};
}

# Clean up args (remove leading/trailing space)
# 'foo = bar' becomes 'foo ' => ' bar' becomes 'foo' => 'bar'
%ARGS = map({$a=$ARGS{$_}; $a=~s/^\s+//g; s/\s+$//g; $_=>$a} keys(%ARGS));

################################################################################
# Begin the main program
################################################################################

$COUNT=`ps auxx |grep $OPTIONS{'check'} |grep -v grep |wc -l`

if ($COUNT == 1) {
    print 'OK: '.$OPTIONS{'check'}.' is running';
    exit $ERRORS{'OK'};
} elsif ($COUNT == 0) {
    print 'CRITICAL: '.$OPTIONS{'check'}.' is NOT running'
    exit $ERRORS{'CRITICAL'};
} else {
    print 'CRITICAL: '.$COUNT.' '.$OPTIONS{'check'}.'s are running'
    exit $ERRORS{'CRITICAL'};
}

=pod

=head1 NAME

check_mmm - Nagios checks for mmmd_agent and mmmd_angel

=head1 SYNOPSIS

 check_mmm -K <check_name> [options]

  Options:
    -K, --check=<check_name>  The check to run
    -h, --help                Display this message and exit
    -V, --version             Display version information and exit

 Defaults are:

 ATTRIBUTE                 VALUE
 ------------------------- -----------------
 check                     No default value
 help                      FALSE
 version                   FALSE

 The following checks are supported:

 mmmd_agent mmmd_angel

=head1 OPTIONS

=over

=item I<--check>|I<-K>

The check to run, see L<CHECKS> section for details. Only one check may be
specified at a time.

=item I<--help>|I<-h>

Display a short help message and exit.

=item I<--version>|I<-V>

Display version information and exit.

=back

=head1 CHECKS

=over

=item B<mmmd_agent>

Checks if the mmmd_agent process is running.
Returns CRITICAL if 0 or >1 are running

=item B<mmmd_angel>

Checks if the mmmd_angel process is running.
Returns CRITICAL if 0 or >1 are running

=back

=head1 SYSTEM REQUIREMENTS

check_mmm requires the following Perl modules:

  Pod::Usage
  Getopt::Long

=head1 BUGS

Please report all bugs and feature requests to
http://code.google.com/p/check-mysql-all

=head1 LICENSE

This program is copyright (c) 2008 Ryan Lowe.
Feedback and improvements are welcome (rlowe@pablowe.net).

THIS PROGRAM IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, version 2; OR the Perl Artistic License.  On UNIX and similar
systems, you can issue `man perlgpl' or `man perlartistic' to read these
licenses.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA  02111-1307 USA.

=head1 AUTHOR

Ryan Lowe (ryan.a.lowe@percona.com)

=head1 VERSION

This manual page documents 0.0.4 of check_mmm

=cut
   

